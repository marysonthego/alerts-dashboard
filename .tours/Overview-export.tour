{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "Alerts Dashboard Overview",
  "steps": [
    {
      "title": "What is Alerts Dashboard?",
      "description": "# Dashboard for Alerts for Good\r\n\r\nThis is the user dashboard for the Alerts for Good non-profit startup.\r\n\r\n**The Alerts for Good service sends text messages to users when weather, corona virus, or air quality alerts are issued for the zip codes they have selected.**\r\n\r\n\r\nOn the dashboard, users can:\r\n## Profile\r\n- Edit their profile info\r\n- Change their password\r\n- Update the cell phone number to receive alerts\r\n\r\n## Locations\r\n- add, change, or delete alert locations\r\n- have any number of locations within the US\r\n- specify which types of alerts they want to get for each location.\r\n- keep a location in their list and temporarily disable alerts for it.\r\n- Give locations nicknames (Mom's house, Office, etc.)\r\n\r\n## Friends\r\n- Create a list of friends to also send alerts to.\r\n- Specify one location for the friend to get alerts about.\r\n- Specify what type of alerts to send for the location.\r\n- Add, update, and delete friends from the list.\r\n- Friends get an opt-in text they must respond to before any alerts are sent.\r\n- Friends are invited to join Alerts for Good to be able to specify more than one location, change alert types, and enable/disable alerts as needed.\r\n\r\n## Donations\r\n- Alerts for Good is a free service\r\n- Donations are accepted through the GiveLively API on the Donations page."
    },
    {
      "file": "dashboard/src/index.js",
      "description": "**Index.js** is the entry point to the app\r\n- Uses the Metronic Theme\r\n- React Router V5\r\n- Redux Tookkit Query aka (RTK Query)",
      "line": 48,
      "contents": "import \"react-app-polyfill/ie11\";\r\nimport \"react-app-polyfill/stable\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport store from 'app/redux/store'\r\nimport { Provider } from 'react-redux'\r\nimport App from \"app/App\";\r\nimport \"./index.scss\"; // Standard version\r\nimport \"socicon/css/socicon.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { MetronicLayoutProvider } from 'app/components/layout/MetronicLayout';\r\nimport { MetronicSplashScreenProvider } from 'app/components/layout/MetronicSplashScreen';\r\nimport { MetronicSubheaderProvider } from \"app/components/layout/MetronicSubheader\";\r\nimport { MetronicI18nProvider } from \"app/helpers/i18n\";\r\nimport { CookiesProvider } from 'react-cookie';\r\n\r\n/**\r\n * Base URL of the website.\r\n *\r\n * @see https://facebook.github.io/create-react-app/docs/using-the-public-folder\r\n */\r\nconst { PUBLIC_URL } = process.env;\r\n\r\n/**\r\n * Creates `axios-mock-adapter` instance for provided `axios` instance, add\r\n * basic Metronic mocks and returns it.\r\n *\r\n * @see https://github.com/ctimmerm/axios-mock-adapter\r\n */\r\n/* const mock =  _redux.mockAxios(axios); */\r\n/**\r\n * Inject metronic interceptors for axios.\r\n *\r\n * @see https://github.com/axios/axios#interceptors\r\n */\r\n/* _redux.setupAxios(axios, store); */\r\n\r\nReactDOM.render(\r\n  <CookiesProvider>\r\n    <Provider store={ store }>\r\n      <Router>\r\n        <MetronicI18nProvider>\r\n          <MetronicLayoutProvider>\r\n            <MetronicSubheaderProvider>\r\n              <MetronicSplashScreenProvider>\r\n                <App basename={ PUBLIC_URL } />\r\n              </MetronicSplashScreenProvider>\r\n            </MetronicSubheaderProvider>\r\n          </MetronicLayoutProvider>\r\n        </MetronicI18nProvider>\r\n      </Router>\r\n    </Provider>\r\n  </CookiesProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"
    },
    {
      "file": "dashboard/src/app/App.js",
      "description": "A `DebugRouter` is enabled automatically only in Development mode.\r\n\r\nIt console logs location state to help debug routing problems.",
      "line": 10,
      "contents": "import React, { useEffect } from 'react';\r\nimport { Route, useHistory, useLocation } from 'react-router-dom';\r\nimport { AuthInit } from 'app/components/AuthInit';\r\nimport { Routes } from 'app/Routes';\r\nimport { I18nProvider } from 'app/helpers/i18n';\r\nimport { MaterialThemeProvider } from 'app/components/layout/MaterialThemeProvider';\r\nimport { SnackbarProvider } from 'notistack';\r\nimport { Collapse } from '@material-ui/core';\r\n\r\nconst DebugRouter = ({ children }) => {\r\n  let { location } = useHistory();\r\n  if (process.env.NODE_ENV === 'development')\r\n  {\r\n    console.log(\r\n      `DEBUG ROUTER: location.pathname:`,\r\n      location.pathname,\r\n      `location.search:`,\r\n      location.search,\r\n      `location.state:`,\r\n      JSON.stringify(location.state),\r\n      `children:`,\r\n      children\r\n    );\r\n  }\r\n  return children;\r\n};\r\n\r\nfunction App ({ basename }) {\r\n  let location = useLocation();\r\n\r\n  useEffect(() => {\r\n    console.log(`location.pathname:`,location.pathname);\r\n  }, [location]);\r\n\r\n  return (\r\n    <MaterialThemeProvider>\r\n      <I18nProvider>\r\n        <SnackbarProvider dense maxSnack={ 3 } TransitionComponent={Collapse} preventDuplicate>\r\n          <AuthInit>\r\n            <Route\r\n              render={ () => {\r\n                return (\r\n                  <DebugRouter>\r\n                    <Routes />\r\n                  </DebugRouter>\r\n                );\r\n              } }\r\n            />\r\n          </AuthInit>\r\n        </SnackbarProvider>\r\n      </I18nProvider>\r\n    </MaterialThemeProvider>\r\n  );\r\n}\r\nexport default App;\r\n"
    },
    {
      "file": "dashboard/src/app/App.js",
      "description": "`AuthInit` shows/hides the opening splashscreen",
      "line": 39,
      "contents": "import React, { useEffect } from 'react';\r\nimport { Route, useHistory, useLocation } from 'react-router-dom';\r\nimport { AuthInit } from 'app/components/AuthInit';\r\nimport { Routes } from 'app/Routes';\r\nimport { I18nProvider } from 'app/helpers/i18n';\r\nimport { MaterialThemeProvider } from 'app/components/layout/MaterialThemeProvider';\r\nimport { SnackbarProvider } from 'notistack';\r\nimport { Collapse } from '@material-ui/core';\r\n\r\nconst DebugRouter = ({ children }) => {\r\n  let { location } = useHistory();\r\n  if (process.env.NODE_ENV === 'development')\r\n  {\r\n    console.log(\r\n      `DEBUG ROUTER: location.pathname:`,\r\n      location.pathname,\r\n      `location.search:`,\r\n      location.search,\r\n      `location.state:`,\r\n      JSON.stringify(location.state),\r\n      `children:`,\r\n      children\r\n    );\r\n  }\r\n  return children;\r\n};\r\n\r\nfunction App ({ basename }) {\r\n  let location = useLocation();\r\n\r\n  useEffect(() => {\r\n    console.log(`location.pathname:`,location.pathname);\r\n  }, [location]);\r\n\r\n  return (\r\n    <MaterialThemeProvider>\r\n      <I18nProvider>\r\n        <SnackbarProvider dense maxSnack={ 3 } TransitionComponent={Collapse} preventDuplicate>\r\n          <AuthInit>\r\n            <Route\r\n              render={ () => {\r\n                return (\r\n                  <DebugRouter>\r\n                    <Routes />\r\n                  </DebugRouter>\r\n                );\r\n              } }\r\n            />\r\n          </AuthInit>\r\n        </SnackbarProvider>\r\n      </I18nProvider>\r\n    </MaterialThemeProvider>\r\n  );\r\n}\r\nexport default App;\r\n"
    },
    {
      "file": "dashboard/src/app/App.js",
      "description": "`Routes` redirects based on whether or not the user is logged in.",
      "line": 44,
      "contents": "import React, { useEffect } from 'react';\r\nimport { Route, useHistory, useLocation } from 'react-router-dom';\r\nimport { AuthInit } from 'app/components/AuthInit';\r\nimport { Routes } from 'app/Routes';\r\nimport { I18nProvider } from 'app/helpers/i18n';\r\nimport { MaterialThemeProvider } from 'app/components/layout/MaterialThemeProvider';\r\nimport { SnackbarProvider } from 'notistack';\r\nimport { Collapse } from '@material-ui/core';\r\n\r\nconst DebugRouter = ({ children }) => {\r\n  let { location } = useHistory();\r\n  if (process.env.NODE_ENV === 'development')\r\n  {\r\n    console.log(\r\n      `DEBUG ROUTER: location.pathname:`,\r\n      location.pathname,\r\n      `location.search:`,\r\n      location.search,\r\n      `location.state:`,\r\n      JSON.stringify(location.state),\r\n      `children:`,\r\n      children\r\n    );\r\n  }\r\n  return children;\r\n};\r\n\r\nfunction App ({ basename }) {\r\n  let location = useLocation();\r\n\r\n  useEffect(() => {\r\n    console.log(`location.pathname:`,location.pathname);\r\n  }, [location]);\r\n\r\n  return (\r\n    <MaterialThemeProvider>\r\n      <I18nProvider>\r\n        <SnackbarProvider dense maxSnack={ 3 } TransitionComponent={Collapse} preventDuplicate>\r\n          <AuthInit>\r\n            <Route\r\n              render={ () => {\r\n                return (\r\n                  <DebugRouter>\r\n                    <Routes />\r\n                  </DebugRouter>\r\n                );\r\n              } }\r\n            />\r\n          </AuthInit>\r\n        </SnackbarProvider>\r\n      </I18nProvider>\r\n    </MaterialThemeProvider>\r\n  );\r\n}\r\nexport default App;\r\n"
    },
    {
      "file": "dashboard/src/app/BasePage.js",
      "description": "`Routes` redirects to `BasePage` when the user is logged in.\r\n`BasePage` sets the `currentUser` from the `userSlice` in the RTK Query store.",
      "line": 18,
      "contents": "import React, { Suspense } from 'react';\r\nimport { Redirect, Switch } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { LayoutSplashScreen } from 'app/components/layout/MetronicSplashScreen';\r\nimport { ContentRoute } from 'app/components/layout/ContentRoute';\r\nimport { DashboardPage } from 'app/pages/DashboardPage';\r\nimport { ChangePassword } from 'app/pages/ChangePassword';\r\nimport { Login } from 'app/pages/Login';\r\nimport { Logout } from 'app/pages/Logout';\r\nimport { UserProfilePage } from 'app/pages/UserProfilePage';\r\nimport { LocationsStep } from 'app/pages/LocationsStep';\r\nimport { FriendsStep } from 'app/pages/FriendsStep';\r\nimport { ListCustomers } from 'app/pages/ListCustomers';\r\n//import { RssPage } from 'app/pages/RssPage';\r\nimport { selectCurrentUser } from 'app/redux/userSlice';\r\n\r\nexport default function BasePage (props) {\r\n  let currentUser = useSelector(selectCurrentUser);\r\n  console.log(`BasePage isLoggedIn: `, currentUser.isLoggedIn);\r\n\r\n  return (\r\n    <Suspense fallback={ <LayoutSplashScreen /> }>\r\n      { currentUser.isLoggedIn ? (\r\n        <Switch>\r\n          <ContentRoute exact path=\"/dashboard\" component={DashboardPage} />\r\n          <ContentRoute exact path=\"/user-profile\" component={UserProfilePage}/>\r\n          <ContentRoute exact path=\"/logout\" component={Logout}/>\r\n          <ContentRoute exact path=\"/password\" component={ChangePassword}/>\r\n          <ContentRoute exact path=\"/locations-list\" component={LocationsStep}/>\r\n          <ContentRoute exact path=\"/friends-list\" component={FriendsStep}/>\r\n          <ContentRoute exact path=\"/list-customers\" component={ListCustomers}/>\r\n          {currentUser.usertype === 'admin' ? (\r\n            <>\r\n            <ContentRoute exact path=\"/list-customers\" component={ListCustomers}/>\r\n            {/* <ContentRoute exact path=\"/rss-page\" component={RssPage}/> */}\r\n            </>\r\n          ) : (<Redirect to=\"/dashboard\"/>)}\r\n          <Redirect from=\"/\" to=\"/dashboard\" />\r\n        </Switch>\r\n      ) : (\r\n        <Switch>\r\n          <ContentRoute path=\"/auth/login\" component={ Login } />\r\n          <Redirect to=\"/auth/login\" />\r\n          <Redirect to=\"/error\" />\r\n        </Switch>\r\n      )}\r\n    </Suspense>\r\n  );\r\n}\r\n"
    },
    {
      "file": "dashboard/src/app/BasePage.js",
      "description": "If the user is an admin, `/list-customers` is added to their possible routes.",
      "line": 32,
      "contents": "import React, { Suspense } from 'react';\r\nimport { Redirect, Switch } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { LayoutSplashScreen } from 'app/components/layout/MetronicSplashScreen';\r\nimport { ContentRoute } from 'app/components/layout/ContentRoute';\r\nimport { DashboardPage } from 'app/pages/DashboardPage';\r\nimport { ChangePassword } from 'app/pages/ChangePassword';\r\nimport { Login } from 'app/pages/Login';\r\nimport { Logout } from 'app/pages/Logout';\r\nimport { UserProfilePage } from 'app/pages/UserProfilePage';\r\nimport { LocationsStep } from 'app/pages/LocationsStep';\r\nimport { FriendsStep } from 'app/pages/FriendsStep';\r\nimport { ListCustomers } from 'app/pages/ListCustomers';\r\n//import { RssPage } from 'app/pages/RssPage';\r\nimport { selectCurrentUser } from 'app/redux/userSlice';\r\n\r\nexport default function BasePage (props) {\r\n  let currentUser = useSelector(selectCurrentUser);\r\n  console.log(`BasePage isLoggedIn: `, currentUser.isLoggedIn);\r\n\r\n  return (\r\n    <Suspense fallback={ <LayoutSplashScreen /> }>\r\n      { currentUser.isLoggedIn ? (\r\n        <Switch>\r\n          <ContentRoute exact path=\"/dashboard\" component={DashboardPage} />\r\n          <ContentRoute exact path=\"/user-profile\" component={UserProfilePage}/>\r\n          <ContentRoute exact path=\"/logout\" component={Logout}/>\r\n          <ContentRoute exact path=\"/password\" component={ChangePassword}/>\r\n          <ContentRoute exact path=\"/locations-list\" component={LocationsStep}/>\r\n          <ContentRoute exact path=\"/friends-list\" component={FriendsStep}/>\r\n          <ContentRoute exact path=\"/list-customers\" component={ListCustomers}/>\r\n          {currentUser.usertype === 'admin' ? (\r\n            <>\r\n            <ContentRoute exact path=\"/list-customers\" component={ListCustomers}/>\r\n            {/* <ContentRoute exact path=\"/rss-page\" component={RssPage}/> */}\r\n            </>\r\n          ) : (<Redirect to=\"/dashboard\"/>)}\r\n          <Redirect from=\"/\" to=\"/dashboard\" />\r\n        </Switch>\r\n      ) : (\r\n        <Switch>\r\n          <ContentRoute path=\"/auth/login\" component={ Login } />\r\n          <Redirect to=\"/auth/login\" />\r\n          <Redirect to=\"/error\" />\r\n        </Switch>\r\n      )}\r\n    </Suspense>\r\n  );\r\n}\r\n"
    },
    {
      "file": "dashboard/src/app/BasePage.js",
      "description": "Redirect to `/dashboard`",
      "line": 38,
      "contents": "import React, { Suspense } from 'react';\r\nimport { Redirect, Switch } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { LayoutSplashScreen } from 'app/components/layout/MetronicSplashScreen';\r\nimport { ContentRoute } from 'app/components/layout/ContentRoute';\r\nimport { DashboardPage } from 'app/pages/DashboardPage';\r\nimport { ChangePassword } from 'app/pages/ChangePassword';\r\nimport { Login } from 'app/pages/Login';\r\nimport { Logout } from 'app/pages/Logout';\r\nimport { UserProfilePage } from 'app/pages/UserProfilePage';\r\nimport { LocationsStep } from 'app/pages/LocationsStep';\r\nimport { FriendsStep } from 'app/pages/FriendsStep';\r\nimport { ListCustomers } from 'app/pages/ListCustomers';\r\n//import { RssPage } from 'app/pages/RssPage';\r\nimport { selectCurrentUser } from 'app/redux/userSlice';\r\n\r\nexport default function BasePage (props) {\r\n  let currentUser = useSelector(selectCurrentUser);\r\n  console.log(`BasePage isLoggedIn: `, currentUser.isLoggedIn);\r\n\r\n  return (\r\n    <Suspense fallback={ <LayoutSplashScreen /> }>\r\n      { currentUser.isLoggedIn ? (\r\n        <Switch>\r\n          <ContentRoute exact path=\"/dashboard\" component={DashboardPage} />\r\n          <ContentRoute exact path=\"/user-profile\" component={UserProfilePage}/>\r\n          <ContentRoute exact path=\"/logout\" component={Logout}/>\r\n          <ContentRoute exact path=\"/password\" component={ChangePassword}/>\r\n          <ContentRoute exact path=\"/locations-list\" component={LocationsStep}/>\r\n          <ContentRoute exact path=\"/friends-list\" component={FriendsStep}/>\r\n          <ContentRoute exact path=\"/list-customers\" component={ListCustomers}/>\r\n          {currentUser.usertype === 'admin' ? (\r\n            <>\r\n            <ContentRoute exact path=\"/list-customers\" component={ListCustomers}/>\r\n            {/* <ContentRoute exact path=\"/rss-page\" component={RssPage}/> */}\r\n            </>\r\n          ) : (<Redirect to=\"/dashboard\"/>)}\r\n          <Redirect from=\"/\" to=\"/dashboard\" />\r\n        </Switch>\r\n      ) : (\r\n        <Switch>\r\n          <ContentRoute path=\"/auth/login\" component={ Login } />\r\n          <Redirect to=\"/auth/login\" />\r\n          <Redirect to=\"/error\" />\r\n        </Switch>\r\n      )}\r\n    </Suspense>\r\n  );\r\n}\r\n"
    },
    {
      "file": "dashboard/src/app/pages/DashboardPage.js",
      "description": "`DashboardPage` calls `Header` to create the overall site header, then `DashboardProfileWidget` - the dashboard landing page.",
      "line": 5,
      "contents": "import React from 'react';\r\nimport { Header } from 'app/components/Header';\r\nimport { DashboardProfileWidget } from 'app/pages/DashboardProfileWidget';\r\n\r\nexport const DashboardPage = () => {\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <DashboardProfileWidget />\r\n    </div>\r\n  );\r\n};\r\n"
    },
    {
      "file": "dashboard/src/app/pages/DashboardProfileWidget.js",
      "description": "`DashboardProfileWidget` is a page of links that mirrors the links in the slider and top menus.",
      "line": 12,
      "contents": "/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectCurrentUser } from 'app/redux/userSlice';\r\nimport SVG from 'react-inlinesvg';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { DropdownMenu2 } from 'app/components/DropdownMenu2';\r\nimport { UserProfileDropdown } from 'app/pages/UserProfileDropdown';\r\n\r\nexport function DashboardProfileWidget ({ className }) {\r\n  const user = useSelector(selectCurrentUser);\r\n  console.log(`user: `, user);\r\n  if (user.custid === 0) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className={ `card card-custom bg-gray-100 ${className}` }>\r\n      {/* Header */ }\r\n      <div className=\"card-header border-0 bg-gray-200 py-5\">\r\n        <h3 className=\"card-title font-weight-bolder text-warning\">\r\n          Your Profile\r\n        </h3>\r\n\r\n        <div className=\"text-muted font-weight-bold font-size-lg\">\r\n          <UserProfileDropdown />\r\n        </div>\r\n\r\n        <div className=\"card-toolbar\">\r\n          \r\n        </div>\r\n      </div>\r\n      {/* Body */ }\r\n      <div className=\"card-body p-0 position-relative overflow-hidden bg-gray-200\">\r\n\r\n        {/* Stat */ }\r\n        <div className=\"card-spacer mt-0\">\r\n          <div className=\"row mt-5\">\r\n            <div className=\"col bg-default px-6 py-8 rounded-xl mr-7 mb-7\">\r\n              <Link\r\n                to=\"/user-profile\"\r\n                className=\"text-primary font-weight-bold font-size-h6 mt-2\">\r\n                <div className=\"col bg-gray-100 px-6 py-8 rounded-xl mr-7 mb-7\">\r\n                  <span className=\"svg-icon svg-icon-3x svg-icon-warning d-block my-2\">\r\n                    <SVG\r\n                      src='/media/a4g/Settings4.svg' title=\"Your Account\">\r\n                    </SVG>\r\n                  </span>\r\n                  Account\r\n                </div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"col bg-default px-6 py-8 rounded-xl mb-7\">\r\n              <Link\r\n                to=\"/friends-list\"\r\n                className=\"text-primary font-weight-bold font-size-h6 mt-2\">\r\n                <div className=\"col bg-gray-100 px-6 py-8 rounded-xl mr-7 mb-7\">\r\n                  <span className=\"svg-icon svg-icon-3x svg-icon-warning d-block my-2\">\r\n                    <SVG\r\n                      src='/media/a4g/Group.svg' title=\"Friends List\">\r\n                    </SVG>\r\n                  </span>\r\n                  Friends\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"row mt-5\">\r\n            <div className=\"col bg-default px-6 py-8 rounded-xl mr-7 mb-7\">\r\n              <Link\r\n                to=\"/locations-list\"\r\n                className=\"text-primary font-weight-bold font-size-h6 mt-2\">\r\n                <div className=\"col bg-gray-100 px-6 py-8 rounded-xl mr-7 mb-7\">\r\n                  <span className=\"svg-icon svg-icon-3x svg-icon-warning d-block my-2\">\r\n                    <SVG\r\n                      src='/media/a4g/Flag.svg' title=\"Alert Locations\"></SVG>\r\n                  </span>\r\n                  Alert Locations\r\n                </div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"col bg-default px-6 py-8 rounded-xl mb-7\">\r\n              <Link\r\n                to=\"/latest-alerts\"\r\n                className=\"text-primary font-weight-bold font-size-h6 mt-2\">\r\n                <div className=\"col bg-gray-100 px-6 py-8 rounded-xl mr-7\">\r\n                  <span className=\"svg-icon svg-icon-3x svg-icon-warning d-block my-2\">\r\n                    <SVG\r\n                      src='/media/a4g/Highvoltage.svg' title=\"Latest Alerts\"></SVG>\r\n                  </span>\r\n                  Latest Alerts\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          \r\n          {user.usertype === 'admin' ? (\r\n          <div className=\"row mt-5\">\r\n            <div className=\"col bg-default px-6 py-8 rounded-xl mb-7\">\r\n              <Link\r\n                to=\"/list-customers\"\r\n                className=\"text-primary font-weight-bold font-size-h6 mt-2\">\r\n                <div className=\"col bg-gray-100 px-6 py-8 rounded-xl mr-7\">\r\n                  <span className=\"svg-icon svg-icon-3x svg-icon-warning d-block my-2\">\r\n                    <SVG\r\n                      src='/media/a4g/Clipboard.svg' title=\"Customers\"></SVG>\r\n                  </span>\r\n                  Customer List\r\n                </div>\r\n              </Link>\r\n            </div>\r\n            {/* <div className=\"col bg-default px-6 py-8 rounded-xl mb-7\">\r\n              <Link\r\n                to=\"/rss-page\"\r\n                className=\"text-primary font-weight-bold font-size-h6 mt-2\">\r\n                <div className=\"col bg-gray-100 px-6 py-8 rounded-xl mr-7\">\r\n                  <span className=\"svg-icon svg-icon-3x svg-icon-warning d-block my-2\">\r\n                    <SVG\r\n                      src={ (\r\n                        '/media/a4g/Clipboard.svg'\r\n                      ) }></SVG>\r\n                  </span>\r\n                  Set RSS\r\n                </div>\r\n              </Link>\r\n            </div> */}\r\n          </div>\r\n          ) : (null)}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Resize */ }\r\n      <div className=\"resize-triggers\">\r\n        <div className=\"expand-trigger\">\r\n          <div style={ { width: '411px', height: '461px' } } />\r\n        </div>\r\n        <div className=\"contract-trigger\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"
    },
    {
      "file": "dashboard/src/app/pages/DashboardProfileWidget.js",
      "description": "`UserProfileDropdown` is where users can logout, make a donation, or recurring donation by linking to the **GiveLively** API",
      "line": 27,
      "contents": "/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectCurrentUser } from 'app/redux/userSlice';\r\nimport SVG from 'react-inlinesvg';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { DropdownMenu2 } from 'app/components/DropdownMenu2';\r\nimport { UserProfileDropdown } from 'app/pages/UserProfileDropdown';\r\n\r\nexport function DashboardProfileWidget ({ className }) {\r\n  const user = useSelector(selectCurrentUser);\r\n  console.log(`user: `, user);\r\n  if (user.custid === 0) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className={ `card card-custom bg-gray-100 ${className}` }>\r\n      {/* Header */ }\r\n      <div className=\"card-header border-0 bg-gray-200 py-5\">\r\n        <h3 className=\"card-title font-weight-bolder text-warning\">\r\n          Your Profile\r\n        </h3>\r\n\r\n        <div className=\"text-muted font-weight-bold font-size-lg\">\r\n          <UserProfileDropdown />\r\n        </div>\r\n\r\n        <div className=\"card-toolbar\">\r\n          \r\n        </div>\r\n      </div>\r\n      {/* Body */ }\r\n      <div className=\"card-body p-0 position-relative overflow-hidden bg-gray-200\">\r\n\r\n        {/* Stat */ }\r\n        <div className=\"card-spacer mt-0\">\r\n          <div className=\"row mt-5\">\r\n            <div className=\"col bg-default px-6 py-8 rounded-xl mr-7 mb-7\">\r\n              <Link\r\n                to=\"/user-profile\"\r\n                className=\"text-primary font-weight-bold font-size-h6 mt-2\">\r\n                <div className=\"col bg-gray-100 px-6 py-8 rounded-xl mr-7 mb-7\">\r\n                  <span className=\"svg-icon svg-icon-3x svg-icon-warning d-block my-2\">\r\n                    <SVG\r\n                      src='/media/a4g/Settings4.svg' title=\"Your Account\">\r\n                    </SVG>\r\n                  </span>\r\n                  Account\r\n                </div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"col bg-default px-6 py-8 rounded-xl mb-7\">\r\n              <Link\r\n                to=\"/friends-list\"\r\n                className=\"text-primary font-weight-bold font-size-h6 mt-2\">\r\n                <div className=\"col bg-gray-100 px-6 py-8 rounded-xl mr-7 mb-7\">\r\n                  <span className=\"svg-icon svg-icon-3x svg-icon-warning d-block my-2\">\r\n                    <SVG\r\n                      src='/media/a4g/Group.svg' title=\"Friends List\">\r\n                    </SVG>\r\n                  </span>\r\n                  Friends\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"row mt-5\">\r\n            <div className=\"col bg-default px-6 py-8 rounded-xl mr-7 mb-7\">\r\n              <Link\r\n                to=\"/locations-list\"\r\n                className=\"text-primary font-weight-bold font-size-h6 mt-2\">\r\n                <div className=\"col bg-gray-100 px-6 py-8 rounded-xl mr-7 mb-7\">\r\n                  <span className=\"svg-icon svg-icon-3x svg-icon-warning d-block my-2\">\r\n                    <SVG\r\n                      src='/media/a4g/Flag.svg' title=\"Alert Locations\"></SVG>\r\n                  </span>\r\n                  Alert Locations\r\n                </div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"col bg-default px-6 py-8 rounded-xl mb-7\">\r\n              <Link\r\n                to=\"/latest-alerts\"\r\n                className=\"text-primary font-weight-bold font-size-h6 mt-2\">\r\n                <div className=\"col bg-gray-100 px-6 py-8 rounded-xl mr-7\">\r\n                  <span className=\"svg-icon svg-icon-3x svg-icon-warning d-block my-2\">\r\n                    <SVG\r\n                      src='/media/a4g/Highvoltage.svg' title=\"Latest Alerts\"></SVG>\r\n                  </span>\r\n                  Latest Alerts\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          \r\n          {user.usertype === 'admin' ? (\r\n          <div className=\"row mt-5\">\r\n            <div className=\"col bg-default px-6 py-8 rounded-xl mb-7\">\r\n              <Link\r\n                to=\"/list-customers\"\r\n                className=\"text-primary font-weight-bold font-size-h6 mt-2\">\r\n                <div className=\"col bg-gray-100 px-6 py-8 rounded-xl mr-7\">\r\n                  <span className=\"svg-icon svg-icon-3x svg-icon-warning d-block my-2\">\r\n                    <SVG\r\n                      src='/media/a4g/Clipboard.svg' title=\"Customers\"></SVG>\r\n                  </span>\r\n                  Customer List\r\n                </div>\r\n              </Link>\r\n            </div>\r\n            {/* <div className=\"col bg-default px-6 py-8 rounded-xl mb-7\">\r\n              <Link\r\n                to=\"/rss-page\"\r\n                className=\"text-primary font-weight-bold font-size-h6 mt-2\">\r\n                <div className=\"col bg-gray-100 px-6 py-8 rounded-xl mr-7\">\r\n                  <span className=\"svg-icon svg-icon-3x svg-icon-warning d-block my-2\">\r\n                    <SVG\r\n                      src={ (\r\n                        '/media/a4g/Clipboard.svg'\r\n                      ) }></SVG>\r\n                  </span>\r\n                  Set RSS\r\n                </div>\r\n              </Link>\r\n            </div> */}\r\n          </div>\r\n          ) : (null)}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Resize */ }\r\n      <div className=\"resize-triggers\">\r\n        <div className=\"expand-trigger\">\r\n          <div style={ { width: '411px', height: '461px' } } />\r\n        </div>\r\n        <div className=\"contract-trigger\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"
    },
    {
      "file": "dashboard/src/app/pages/DashboardProfileWidget.js",
      "description": "Admin users also see a List Customers link on the dashboard and on the menus.",
      "line": 98,
      "contents": "/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectCurrentUser } from 'app/redux/userSlice';\r\nimport SVG from 'react-inlinesvg';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { DropdownMenu2 } from 'app/components/DropdownMenu2';\r\nimport { UserProfileDropdown } from 'app/pages/UserProfileDropdown';\r\n\r\nexport function DashboardProfileWidget ({ className }) {\r\n  const user = useSelector(selectCurrentUser);\r\n  console.log(`user: `, user);\r\n  if (user.custid === 0) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className={ `card card-custom bg-gray-100 ${className}` }>\r\n      {/* Header */ }\r\n      <div className=\"card-header border-0 bg-gray-200 py-5\">\r\n        <h3 className=\"card-title font-weight-bolder text-warning\">\r\n          Your Profile\r\n        </h3>\r\n\r\n        <div className=\"text-muted font-weight-bold font-size-lg\">\r\n          <UserProfileDropdown />\r\n        </div>\r\n\r\n        <div className=\"card-toolbar\">\r\n          \r\n        </div>\r\n      </div>\r\n      {/* Body */ }\r\n      <div className=\"card-body p-0 position-relative overflow-hidden bg-gray-200\">\r\n\r\n        {/* Stat */ }\r\n        <div className=\"card-spacer mt-0\">\r\n          <div className=\"row mt-5\">\r\n            <div className=\"col bg-default px-6 py-8 rounded-xl mr-7 mb-7\">\r\n              <Link\r\n                to=\"/user-profile\"\r\n                className=\"text-primary font-weight-bold font-size-h6 mt-2\">\r\n                <div className=\"col bg-gray-100 px-6 py-8 rounded-xl mr-7 mb-7\">\r\n                  <span className=\"svg-icon svg-icon-3x svg-icon-warning d-block my-2\">\r\n                    <SVG\r\n                      src='/media/a4g/Settings4.svg' title=\"Your Account\">\r\n                    </SVG>\r\n                  </span>\r\n                  Account\r\n                </div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"col bg-default px-6 py-8 rounded-xl mb-7\">\r\n              <Link\r\n                to=\"/friends-list\"\r\n                className=\"text-primary font-weight-bold font-size-h6 mt-2\">\r\n                <div className=\"col bg-gray-100 px-6 py-8 rounded-xl mr-7 mb-7\">\r\n                  <span className=\"svg-icon svg-icon-3x svg-icon-warning d-block my-2\">\r\n                    <SVG\r\n                      src='/media/a4g/Group.svg' title=\"Friends List\">\r\n                    </SVG>\r\n                  </span>\r\n                  Friends\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"row mt-5\">\r\n            <div className=\"col bg-default px-6 py-8 rounded-xl mr-7 mb-7\">\r\n              <Link\r\n                to=\"/locations-list\"\r\n                className=\"text-primary font-weight-bold font-size-h6 mt-2\">\r\n                <div className=\"col bg-gray-100 px-6 py-8 rounded-xl mr-7 mb-7\">\r\n                  <span className=\"svg-icon svg-icon-3x svg-icon-warning d-block my-2\">\r\n                    <SVG\r\n                      src='/media/a4g/Flag.svg' title=\"Alert Locations\"></SVG>\r\n                  </span>\r\n                  Alert Locations\r\n                </div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"col bg-default px-6 py-8 rounded-xl mb-7\">\r\n              <Link\r\n                to=\"/latest-alerts\"\r\n                className=\"text-primary font-weight-bold font-size-h6 mt-2\">\r\n                <div className=\"col bg-gray-100 px-6 py-8 rounded-xl mr-7\">\r\n                  <span className=\"svg-icon svg-icon-3x svg-icon-warning d-block my-2\">\r\n                    <SVG\r\n                      src='/media/a4g/Highvoltage.svg' title=\"Latest Alerts\"></SVG>\r\n                  </span>\r\n                  Latest Alerts\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          \r\n          {user.usertype === 'admin' ? (\r\n          <div className=\"row mt-5\">\r\n            <div className=\"col bg-default px-6 py-8 rounded-xl mb-7\">\r\n              <Link\r\n                to=\"/list-customers\"\r\n                className=\"text-primary font-weight-bold font-size-h6 mt-2\">\r\n                <div className=\"col bg-gray-100 px-6 py-8 rounded-xl mr-7\">\r\n                  <span className=\"svg-icon svg-icon-3x svg-icon-warning d-block my-2\">\r\n                    <SVG\r\n                      src='/media/a4g/Clipboard.svg' title=\"Customers\"></SVG>\r\n                  </span>\r\n                  Customer List\r\n                </div>\r\n              </Link>\r\n            </div>\r\n            {/* <div className=\"col bg-default px-6 py-8 rounded-xl mb-7\">\r\n              <Link\r\n                to=\"/rss-page\"\r\n                className=\"text-primary font-weight-bold font-size-h6 mt-2\">\r\n                <div className=\"col bg-gray-100 px-6 py-8 rounded-xl mr-7\">\r\n                  <span className=\"svg-icon svg-icon-3x svg-icon-warning d-block my-2\">\r\n                    <SVG\r\n                      src={ (\r\n                        '/media/a4g/Clipboard.svg'\r\n                      ) }></SVG>\r\n                  </span>\r\n                  Set RSS\r\n                </div>\r\n              </Link>\r\n            </div> */}\r\n          </div>\r\n          ) : (null)}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Resize */ }\r\n      <div className=\"resize-triggers\">\r\n        <div className=\"expand-trigger\">\r\n          <div style={ { width: '411px', height: '461px' } } />\r\n        </div>\r\n        <div className=\"contract-trigger\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"
    },
    {
      "file": "dashboard/src/app/pages/DashboardProfileWidget.js",
      "description": "The **Account** link opens **UserProfilePage** a wrapper to the components that let users update their account profile and change their password.",
      "line": 41,
      "contents": "/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectCurrentUser } from 'app/redux/userSlice';\r\nimport SVG from 'react-inlinesvg';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { DropdownMenu2 } from 'app/components/DropdownMenu2';\r\nimport { UserProfileDropdown } from 'app/pages/UserProfileDropdown';\r\n\r\nexport function DashboardProfileWidget ({ className }) {\r\n  const user = useSelector(selectCurrentUser);\r\n  console.log(`user: `, user);\r\n  if (user.custid === 0) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className={ `card card-custom bg-gray-100 ${className}` }>\r\n      {/* Header */ }\r\n      <div className=\"card-header border-0 bg-gray-200 py-5\">\r\n        <h3 className=\"card-title font-weight-bolder text-warning\">\r\n          Your Profile\r\n        </h3>\r\n\r\n        <div className=\"text-muted font-weight-bold font-size-lg\">\r\n          <UserProfileDropdown />\r\n        </div>\r\n\r\n        <div className=\"card-toolbar\">\r\n          \r\n        </div>\r\n      </div>\r\n      {/* Body */ }\r\n      <div className=\"card-body p-0 position-relative overflow-hidden bg-gray-200\">\r\n\r\n        {/* Stat */ }\r\n        <div className=\"card-spacer mt-0\">\r\n          <div className=\"row mt-5\">\r\n            <div className=\"col bg-default px-6 py-8 rounded-xl mr-7 mb-7\">\r\n              <Link\r\n                to=\"/user-profile\"\r\n                className=\"text-primary font-weight-bold font-size-h6 mt-2\">\r\n                <div className=\"col bg-gray-100 px-6 py-8 rounded-xl mr-7 mb-7\">\r\n                  <span className=\"svg-icon svg-icon-3x svg-icon-warning d-block my-2\">\r\n                    <SVG\r\n                      src='/media/a4g/Settings4.svg' title=\"Your Account\">\r\n                    </SVG>\r\n                  </span>\r\n                  Account\r\n                </div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"col bg-default px-6 py-8 rounded-xl mb-7\">\r\n              <Link\r\n                to=\"/friends-list\"\r\n                className=\"text-primary font-weight-bold font-size-h6 mt-2\">\r\n                <div className=\"col bg-gray-100 px-6 py-8 rounded-xl mr-7 mb-7\">\r\n                  <span className=\"svg-icon svg-icon-3x svg-icon-warning d-block my-2\">\r\n                    <SVG\r\n                      src='/media/a4g/Group.svg' title=\"Friends List\">\r\n                    </SVG>\r\n                  </span>\r\n                  Friends\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"row mt-5\">\r\n            <div className=\"col bg-default px-6 py-8 rounded-xl mr-7 mb-7\">\r\n              <Link\r\n                to=\"/locations-list\"\r\n                className=\"text-primary font-weight-bold font-size-h6 mt-2\">\r\n                <div className=\"col bg-gray-100 px-6 py-8 rounded-xl mr-7 mb-7\">\r\n                  <span className=\"svg-icon svg-icon-3x svg-icon-warning d-block my-2\">\r\n                    <SVG\r\n                      src='/media/a4g/Flag.svg' title=\"Alert Locations\"></SVG>\r\n                  </span>\r\n                  Alert Locations\r\n                </div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"col bg-default px-6 py-8 rounded-xl mb-7\">\r\n              <Link\r\n                to=\"/latest-alerts\"\r\n                className=\"text-primary font-weight-bold font-size-h6 mt-2\">\r\n                <div className=\"col bg-gray-100 px-6 py-8 rounded-xl mr-7\">\r\n                  <span className=\"svg-icon svg-icon-3x svg-icon-warning d-block my-2\">\r\n                    <SVG\r\n                      src='/media/a4g/Highvoltage.svg' title=\"Latest Alerts\"></SVG>\r\n                  </span>\r\n                  Latest Alerts\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          \r\n          {user.usertype === 'admin' ? (\r\n          <div className=\"row mt-5\">\r\n            <div className=\"col bg-default px-6 py-8 rounded-xl mb-7\">\r\n              <Link\r\n                to=\"/list-customers\"\r\n                className=\"text-primary font-weight-bold font-size-h6 mt-2\">\r\n                <div className=\"col bg-gray-100 px-6 py-8 rounded-xl mr-7\">\r\n                  <span className=\"svg-icon svg-icon-3x svg-icon-warning d-block my-2\">\r\n                    <SVG\r\n                      src='/media/a4g/Clipboard.svg' title=\"Customers\"></SVG>\r\n                  </span>\r\n                  Customer List\r\n                </div>\r\n              </Link>\r\n            </div>\r\n            {/* <div className=\"col bg-default px-6 py-8 rounded-xl mb-7\">\r\n              <Link\r\n                to=\"/rss-page\"\r\n                className=\"text-primary font-weight-bold font-size-h6 mt-2\">\r\n                <div className=\"col bg-gray-100 px-6 py-8 rounded-xl mr-7\">\r\n                  <span className=\"svg-icon svg-icon-3x svg-icon-warning d-block my-2\">\r\n                    <SVG\r\n                      src={ (\r\n                        '/media/a4g/Clipboard.svg'\r\n                      ) }></SVG>\r\n                  </span>\r\n                  Set RSS\r\n                </div>\r\n              </Link>\r\n            </div> */}\r\n          </div>\r\n          ) : (null)}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Resize */ }\r\n      <div className=\"resize-triggers\">\r\n        <div className=\"expand-trigger\">\r\n          <div style={ { width: '411px', height: '461px' } } />\r\n        </div>\r\n        <div className=\"contract-trigger\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"
    },
    {
      "file": "dashboard/src/app/pages/DashboardProfileWidget.js",
      "description": "The links to **/friends-list** and **/locations-list** work the same.\r\n\r\nLocations goes to **LocationsStep**. Friends goes to **FriendsStep**. \r\n\r\nThese components are also used by the sign-up stepper **ProfileStepper**",
      "line": 71,
      "contents": "/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectCurrentUser } from 'app/redux/userSlice';\r\nimport SVG from 'react-inlinesvg';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { DropdownMenu2 } from 'app/components/DropdownMenu2';\r\nimport { UserProfileDropdown } from 'app/pages/UserProfileDropdown';\r\n\r\nexport function DashboardProfileWidget ({ className }) {\r\n  const user = useSelector(selectCurrentUser);\r\n  console.log(`user: `, user);\r\n  if (user.custid === 0) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className={ `card card-custom bg-gray-100 ${className}` }>\r\n      {/* Header */ }\r\n      <div className=\"card-header border-0 bg-gray-200 py-5\">\r\n        <h3 className=\"card-title font-weight-bolder text-warning\">\r\n          Your Profile\r\n        </h3>\r\n\r\n        <div className=\"text-muted font-weight-bold font-size-lg\">\r\n          <UserProfileDropdown />\r\n        </div>\r\n\r\n        <div className=\"card-toolbar\">\r\n          \r\n        </div>\r\n      </div>\r\n      {/* Body */ }\r\n      <div className=\"card-body p-0 position-relative overflow-hidden bg-gray-200\">\r\n\r\n        {/* Stat */ }\r\n        <div className=\"card-spacer mt-0\">\r\n          <div className=\"row mt-5\">\r\n            <div className=\"col bg-default px-6 py-8 rounded-xl mr-7 mb-7\">\r\n              <Link\r\n                to=\"/user-profile\"\r\n                className=\"text-primary font-weight-bold font-size-h6 mt-2\">\r\n                <div className=\"col bg-gray-100 px-6 py-8 rounded-xl mr-7 mb-7\">\r\n                  <span className=\"svg-icon svg-icon-3x svg-icon-warning d-block my-2\">\r\n                    <SVG\r\n                      src='/media/a4g/Settings4.svg' title=\"Your Account\">\r\n                    </SVG>\r\n                  </span>\r\n                  Account\r\n                </div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"col bg-default px-6 py-8 rounded-xl mb-7\">\r\n              <Link\r\n                to=\"/friends-list\"\r\n                className=\"text-primary font-weight-bold font-size-h6 mt-2\">\r\n                <div className=\"col bg-gray-100 px-6 py-8 rounded-xl mr-7 mb-7\">\r\n                  <span className=\"svg-icon svg-icon-3x svg-icon-warning d-block my-2\">\r\n                    <SVG\r\n                      src='/media/a4g/Group.svg' title=\"Friends List\">\r\n                    </SVG>\r\n                  </span>\r\n                  Friends\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"row mt-5\">\r\n            <div className=\"col bg-default px-6 py-8 rounded-xl mr-7 mb-7\">\r\n              <Link\r\n                to=\"/locations-list\"\r\n                className=\"text-primary font-weight-bold font-size-h6 mt-2\">\r\n                <div className=\"col bg-gray-100 px-6 py-8 rounded-xl mr-7 mb-7\">\r\n                  <span className=\"svg-icon svg-icon-3x svg-icon-warning d-block my-2\">\r\n                    <SVG\r\n                      src='/media/a4g/Flag.svg' title=\"Alert Locations\"></SVG>\r\n                  </span>\r\n                  Alert Locations\r\n                </div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"col bg-default px-6 py-8 rounded-xl mb-7\">\r\n              <Link\r\n                to=\"/latest-alerts\"\r\n                className=\"text-primary font-weight-bold font-size-h6 mt-2\">\r\n                <div className=\"col bg-gray-100 px-6 py-8 rounded-xl mr-7\">\r\n                  <span className=\"svg-icon svg-icon-3x svg-icon-warning d-block my-2\">\r\n                    <SVG\r\n                      src='/media/a4g/Highvoltage.svg' title=\"Latest Alerts\"></SVG>\r\n                  </span>\r\n                  Latest Alerts\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          \r\n          {user.usertype === 'admin' ? (\r\n          <div className=\"row mt-5\">\r\n            <div className=\"col bg-default px-6 py-8 rounded-xl mb-7\">\r\n              <Link\r\n                to=\"/list-customers\"\r\n                className=\"text-primary font-weight-bold font-size-h6 mt-2\">\r\n                <div className=\"col bg-gray-100 px-6 py-8 rounded-xl mr-7\">\r\n                  <span className=\"svg-icon svg-icon-3x svg-icon-warning d-block my-2\">\r\n                    <SVG\r\n                      src='/media/a4g/Clipboard.svg' title=\"Customers\"></SVG>\r\n                  </span>\r\n                  Customer List\r\n                </div>\r\n              </Link>\r\n            </div>\r\n            {/* <div className=\"col bg-default px-6 py-8 rounded-xl mb-7\">\r\n              <Link\r\n                to=\"/rss-page\"\r\n                className=\"text-primary font-weight-bold font-size-h6 mt-2\">\r\n                <div className=\"col bg-gray-100 px-6 py-8 rounded-xl mr-7\">\r\n                  <span className=\"svg-icon svg-icon-3x svg-icon-warning d-block my-2\">\r\n                    <SVG\r\n                      src={ (\r\n                        '/media/a4g/Clipboard.svg'\r\n                      ) }></SVG>\r\n                  </span>\r\n                  Set RSS\r\n                </div>\r\n              </Link>\r\n            </div> */}\r\n          </div>\r\n          ) : (null)}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Resize */ }\r\n      <div className=\"resize-triggers\">\r\n        <div className=\"expand-trigger\">\r\n          <div style={ { width: '411px', height: '461px' } } />\r\n        </div>\r\n        <div className=\"contract-trigger\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"
    },
    {
      "file": "dashboard/src/app/pages/LocationsStep.js",
      "description": "**LocationsStep** has an explantory heading \r\n\r\n**AddLocationForm** where users can add new locations to monitor. \r\n\r\n**ListLocations** a responsive bootstrap table that lists all their locations.\r\nIn the table users can:\r\n- Delete locations.\r\n- Change the type of alerts to get for a location.\r\n- Change the nickname of a location.",
      "line": 64,
      "selection": {
        "start": {
          "line": 162,
          "character": 8
        },
        "end": {
          "line": 162,
          "character": 23
        }
      },
      "contents": "import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { Card } from 'react-bootstrap';\r\nimport { ListLocations } from 'app/pages/ListLocations';\r\nimport { AddLocationForm } from 'app/pages/AddLocationForm';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUserCustid } from 'app/redux/userSlice';\r\nimport {\r\n  Box,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport {\r\n  faWind,\r\n  faShieldVirus,\r\n  faCloudSunRain,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    marginBottom: '2em',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flexStart',\r\n  },\r\n  head: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginTop: '1em',\r\n  },\r\n  row: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    flexShrink: '1',\r\n\r\n    '@media (max-width: 390px)': {\r\n      flexDirection: 'column',\r\n      justifyContent: 'flexStart',\r\n    },\r\n  },\r\n  card: {\r\n    padding: 1,\r\n    color: '#000000',\r\n    flexShrink: '1',\r\n    backgroundColor: 'white',\r\n    width: '30%',\r\n    '@media (max-width: 390px)': {\r\n      width: '100%',\r\n      margin: '1vw',\r\n    },\r\n  },\r\n  text: {\r\n    marginLeft: '1vw',\r\n    marginRight: '1vw',\r\n  },\r\n  textfield: {\r\n    marginRight: '1rem',\r\n  },\r\n}));\r\n\r\nexport const LocationsStep = ({\r\n  step\r\n}) => {\r\n  const custid = useSelector(selectUserCustid);\r\n  const classes = useStyles();\r\n  console.log(`LocationsStep custid: `, custid);\r\n  const weatherIcon = (\r\n    <FontAwesomeIcon icon={ faCloudSunRain } size=\"3x\" color=\"#2cb7e3\" />\r\n  );\r\n  const virusIcon = (\r\n    <FontAwesomeIcon icon={ faShieldVirus } size=\"3x\" color=\"#ffb017\" />\r\n  );\r\n  const airIcon = <FontAwesomeIcon icon={ faWind } size=\"3x\" color=\"#2cb7e3\" />;\r\n\r\n  const cards = [\r\n    {\r\n      name: 'weatheralert',\r\n      title: 'Weather Alerts',\r\n      icon: weatherIcon,\r\n      blurb:\r\n        'Up to date severe weather alerts from the National Weather Service for the locations you select.',\r\n    },\r\n    {\r\n      name: 'virusalert',\r\n      title: 'Covid Alerts',\r\n      icon: virusIcon,\r\n      blurb:\r\n        'Up to date health and Coronavirus alerts sent to you when updated by the Center for Disease Control.',\r\n    },\r\n    {\r\n      name: 'airalert',\r\n      title: 'Air Quality Alerts',\r\n      icon: airIcon,\r\n      blurb:\r\n        'Poor air quality can reduce life expectancy by an average of 2 years. Change that for yourself, your loved ones, and your community.',\r\n    },\r\n  ];\r\n\r\n  const LocationsHeader = () => {\r\n    return (\r\n      <div className=\"classes.page\">\r\n        <div key=\"lhdiv01\" className={ `card card-custom` }>\r\n          {/* begin::Header */ }\r\n          <div\r\n            className=\"card-header border-0 py-5\"\r\n            style={ { justifyContent: 'center' } }\r\n            key=\"lhdiv01\">\r\n            <h3 className=\"card-title align-items-start flex-column\" key=\"h301\">\r\n              <span\r\n                className=\"card-label font-weight-bolder text-dark\"\r\n                key=\"hsp01\">\r\n                Alert locations\r\n              </span>\r\n              <span\r\n                className=\"text-muted mt-3 font-weight-bold font-size-sm \"\r\n                key=\"hsp02\">\r\n                You can add as many locations to monitor as you want. Enter a city and\r\n                state and we'll find the zip code. From here, you can also switch alerts on and off\r\n                for each location. Note that turning off locations for your\r\n                account will not turn them off for any friends & family you've\r\n                added. Friends & family should create their own account to control\r\n                their alerts.\r\n              </span>\r\n            </h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }; // LocationsHeader\r\n  console.log(`LocationsStep custid: `, custid);\r\n  return (\r\n    <Box p={ 2 }>\r\n      {/* begin::Head */ }\r\n      <Box className=\"head\">\r\n        <div className=\"text-center mt-10\">\r\n          <p className=\"text-muted font-weight-bold\">\r\n            You can choose the alerts you'd like to receive for each location\r\n          </p>\r\n        </div>\r\n      </Box>\r\n      {/* begin::Content */ }\r\n      <Box className={ classes.row }>\r\n        { cards.map((el, index) => (\r\n          <Card className={ clsx(classes.card) } key={ index }>\r\n            <div className={ classes.head }>\r\n              <Card.Title style={ { fontSize: '32' } }>\r\n                { el.icon }&nbsp;&nbsp;{ el.title }\r\n              </Card.Title>\r\n            </div>\r\n            { step === 1 ? (\r\n              <Card.Text className=\"text-muted mt-3 font-weight-bold font-size-sm \">\r\n                { el.blurb }\r\n              </Card.Text>\r\n            ) : null }\r\n          </Card>\r\n        )) }\r\n      </Box>\r\n      <LocationsHeader />\r\n      <AddLocationForm />\r\n      <ListLocations />\r\n    </Box>\r\n\r\n  );\r\n};\r\n"
    },
    {
      "file": "dashboard/src/app/pages/UserProfilePage.js",
      "description": "**UserProfilePage** is the dashboard presentation wrapper for **ProfileForm**. \r\n\r\nThe **ProfileForm** is also used by the **ProfileStepper**.\r\n\r\nThe **ProfileStepper** is a stepper series for new users to sign-up.",
      "line": 19,
      "contents": "/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { ProfileForm } from 'app/pages/ProfileForm';\r\n\r\nexport const UserProfilePage = ({ className }) => {\r\n\r\n  const form = 'UserProfilePage';\r\n\r\n  return (\r\n    <>\r\n      <div className={ `card card-custom ${className}` }>\r\n        {/* Header */ }\r\n        <div className=\"card-header border-0\">\r\n          <h3 className=\"card-title font-weight-bolder text-dark\">\r\n            Edit Your Profile\r\n          </h3>\r\n        </div>\r\n        {/* Body */ }\r\n        <ProfileForm form={ form } />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n"
    },
    {
      "file": "dashboard/src/app/pages/ProfileForm.js",
      "description": "The **ProfileForm** component is basically a controlled form which collects and displays user profile info.\r\n\r\n- Validates input through event handlers\r\n  - `handleOnChange`\r\n  - `handleCellChange` (only saves cell number - no formatting)\r\n  - `handleOnBlur` does most of the work \r\n    - Fixes capitalization of first/last name, city, and state\r\n    - If `fieldsValidation` is defined for the field, calls `FormValidation` helper. \r\n    - displays validation errors \r\n    - dispatches user object to `updateCustomer` in store\r\n    - sets error messages in local state \r\n\r\n- Passwords are validated but not stored in user store",
      "line": 39,
      "selection": {
        "start": {
          "line": 84,
          "character": 9
        },
        "end": {
          "line": 84,
          "character": 21
        }
      },
      "contents": "import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Form } from 'react-bootstrap';\r\nimport clsx from 'clsx';\r\nimport {\r\n  makeStyles,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport { useSnackbar } from 'notistack';\r\nimport Snackbar from 'app/helpers/Snackbar';\r\nimport { CellNumberFormat } from 'app/helpers/Formatters';\r\nimport SVG from 'react-inlinesvg';\r\nimport { initUserErrors } from 'app/helpers/Initializers';\r\nimport {\r\n  FormValidation,\r\n  fieldsValidation\r\n} from 'app/helpers/FormValidation';\r\nimport {\r\n  updateErrorState\r\n} from 'app/redux/errorsSlice';\r\nimport {\r\n  useDispatch,\r\n  useSelector\r\n} from 'react-redux';\r\nimport {\r\n  updateUserState,\r\n  selectCurrentUser,\r\n} from 'app/redux/userSlice';\r\nimport { useUpdateCustomerMutation } from 'app/redux/apiSlice';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  input: {\r\n    border: 'none',\r\n    background: '#f5f5f6',\r\n  },\r\n}));\r\n\r\nexport const ProfileForm = ({ form, handlePassword, isADuplicate }) => {\r\n  const [updateCustomer] = useUpdateCustomerMutation();\r\n  const userState = useSelector(selectCurrentUser);\r\n  const [isValid, setIsValid] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [pwds, setPwds] = useState({});\r\n  const classes = useStyles();\r\n\r\n  const [newUser, setNewUser] = useState(userState);\r\n  const [newUserErrors, setNewUserErrors] = useState(initUserErrors);\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const handleOnChange = e => {\r\n    let field = e.target.name;\r\n    let value = e.target.value;\r\n    let item = '';\r\n    item += value;\r\n\r\n    if (field === 'pwd' || field === 'pwd2' || field === 'newpwd' || field === 'newpwd2')\r\n    {\r\n      setPwds({\r\n        ...pwds,\r\n        [field]: item\r\n      })\r\n    } else\r\n    {\r\n      setNewUser({\r\n        ...newUser,\r\n        [field]: item\r\n      })\r\n    }\r\n  };\r\n\r\n  //Cell number to be formatted\r\n  const handleCellChange = e => {\r\n    let field = e.target.name;\r\n    let value = e.target.value;\r\n    setNewUser({\r\n      ...newUser,\r\n      [field]: value\r\n    })\r\n  };\r\n\r\n  const handleOnBlur = e => {\r\n    let field = e.target.name;\r\n    let value = e.target.value;\r\n    let required = e.target.required;\r\n\r\n    if (field === 'cell')\r\n    {\r\n      value = newUser.cell;\r\n    }\r\n\r\n    if (value === '' && !required)\r\n    {\r\n      return;\r\n    };\r\n    //fix capitalization\r\n    let val = '';\r\n    if (field === 'firstname' ||\r\n      field === 'lastname' ||\r\n      field === 'city' ||\r\n      field === 'st')\r\n    {\r\n      if (value)\r\n      {\r\n        if (field === 'st')\r\n        {\r\n          val = value.toUpperCase();\r\n        } else\r\n        {\r\n          val = value.toLowerCase();\r\n          let nameArray = val.split(' ');\r\n          val = '';\r\n          nameArray.forEach(function (element) {\r\n            val += element[0].toUpperCase() + element.slice(1) + ' ';\r\n          });\r\n          val = val.trimEnd();\r\n        }\r\n        setNewUser({\r\n          ...newUser,\r\n          [field]: val\r\n        })\r\n      }\r\n    }\r\n\r\n    if (typeof fieldsValidation[field] !== 'undefined')\r\n    {\r\n      let error =\r\n        FormValidation(field, value, fieldsValidation, required, isADuplicate) || '';\r\n      setNewUserErrors({\r\n        ...newUserErrors,\r\n        [field]: error\r\n      })\r\n      dispatch(updateErrorState(newUserErrors));\r\n      if (field === 'pwd2' && newUserErrors.pwd2 === '')\r\n      {\r\n        handlePassword(value);\r\n      }\r\n      if (error !== '')\r\n      {\r\n        setIsValid(false);\r\n      } else\r\n      {\r\n        setIsValid(true);\r\n      }\r\n    }\r\n    dispatch(updateUserState(newUser));\r\n    dispatch(updateErrorState(newUserErrors));\r\n  };\r\n\r\n  const ChangePassword = () => {\r\n    enqueueSnackbar('You must login to change your password.', {\r\n      variant: 'warning',\r\n    });\r\n    history.push({\r\n      pathname: '/password',\r\n    });\r\n  };\r\n\r\n  const goToDashboard = () => {\r\n    history.push({\r\n      pathname: '/dashboard',\r\n    });\r\n  };\r\n\r\n  const SaveChanges = () => {\r\n    if(newUser.email === '' || newUser.cell === '' || newUser.firstname === '' || newUser.lastname === '') {\r\n      let snackType='missingRequiredField'\r\n      enqueueSnackbar(null, {\r\n        persist: false,\r\n        content: key => <Snackbar id={ key } message={ snackType } />\r\n      });\r\n    }\r\n    updateCustomer(newUser).unwrap()\r\n      .then((payload) => {\r\n        //console.log(`updateCustomer fulfilled payload: `, payload)\r\n        dispatch(updateUserState(payload));\r\n        goToDashboard();\r\n      })\r\n      .catch((error) => {\r\n        console.error('updateCustomer rejected error: ', error);\r\n        dispatch(updateErrorState({ cell: 'Duplicate cell' }));\r\n        dispatch(updateErrorState({ email: 'Duplicate email' }));\r\n\r\n        let snackType='signUpError'\r\n        enqueueSnackbar(null, {\r\n          persist: false,\r\n          content: key => <Snackbar id={ key } message={ snackType } />\r\n        });\r\n      });\r\n  }\r\n\r\n  return (\r\n    \r\n    <div className=\"d-flex flex-column align-items-center card-body pt-0\" >\r\n      <div style={{width: '400px'}} className=\"d-flex align-items-center mb-2 bg-light-warning rounded p-5\">\r\n        <span className=\"svg-icon svg-icon-dark mr-5 svg-icon-lg\">\r\n          <SVG\r\n            src='/media/a4g/Font.svg'\r\n            title=\"First Name Required\"></SVG>\r\n        </span>\r\n        <div className=\"d-flex flex-column flex-grow-1 mr-2 font-weight-bold text-dark font-size-lg\">\r\n          First Name*\r\n        </div>\r\n        <Form>\r\n          <span className=\"font-weight-bold py-1 font-size-lg\">\r\n            <TextField\r\n              className={ `font-weight-bold font-size-lg  rounded text-dark px-2 py-1 ${classes.input}` }\r\n              type=\"text\"\r\n              name=\"firstname\"\r\n              required\r\n              value={ newUser.firstname || '' }\r\n              onChange={ handleOnChange }\r\n              onBlur={ handleOnBlur }\r\n              error={ !!newUserErrors.firstname }\r\n              helperText={ newUserErrors.firstname }\r\n            />\r\n          </span>\r\n        </Form>\r\n      </div>\r\n\r\n      <div style={{width: '400px'}} className=\"d-flex align-items-center bg-light-warning rounded p-5 mb-2\">\r\n        <span className=\"svg-icon svg-icon-dark mr-5 svg-icon-lg\">\r\n          <SVG\r\n            src='/media/a4g/Font.svg'\r\n            title=\"Last Name Required\"></SVG>\r\n        </span>\r\n        <div className=\"d-flex flex-column flex-grow-1 mr-2 font-weight-bold text-dark font-size-lg\">\r\n          Last Name*\r\n        </div>\r\n        <Form>\r\n          <span className=\"font-weight-bold text-dark-75 py-1 font-size-lg\">\r\n            <TextField\r\n              className={ `font-weight-bold font-size-lg rounded px-2 py-1 ${classes.input}` }\r\n              type=\"text\"\r\n              name=\"lastname\"\r\n              required\r\n              value={ newUser.lastname || '' }\r\n              onChange={ handleOnChange }\r\n              onBlur={ handleOnBlur }\r\n              error={ !!newUserErrors.lastname }\r\n              helperText={ newUserErrors.lastname }\r\n            />\r\n          </span>\r\n        </Form>\r\n      </div>\r\n\r\n      <div style={{width: '400px'}} className=\"d-flex align-items-center bg-light-warning rounded p-5 mb-2\">\r\n        <span className=\"svg-icon svg-icon-dark mr-5 svg-icon-lg\">\r\n          <SVG\r\n            src='/media/a4g/Urgent-mail.svg'\r\n            title=\"Email Required\"></SVG>\r\n        </span>\r\n        <div className=\"d-flex flex-column flex-grow-1 mr-2 font-weight-bold text-dark font-size-lg\">\r\n          Email Address*\r\n        </div>\r\n        <Form>\r\n          <span className=\"font-weight-bold text-dark-75 py-1 font-size-lg\">\r\n            <TextField\r\n              className={ `font-weight-bold font-size-lg  rounded px-2 py-1 ${classes.input}` }\r\n              type=\"text\"\r\n              name=\"email\"\r\n              required\r\n              value={ newUser.email || '' }\r\n              onChange={ handleOnChange }\r\n              onBlur={ handleOnBlur }\r\n              error={ !!newUserErrors.email }\r\n              helperText={ newUserErrors.email }\r\n            />\r\n          </span>\r\n        </Form>\r\n      </div>\r\n\r\n      <div style={{width: '400px'}} className=\"d-flex align-items-center bg-light-warning rounded p-5 mb-2\">\r\n        <span className=\"svg-icon svg-icon-dark mr-5 svg-icon-lg\">\r\n          <SVG\r\n            src='/media/a4g/iPhone-X.svg'\r\n            title=\"Cell Phone Required\"></SVG>\r\n        </span>\r\n        <div className=\"d-flex flex-column flex-grow-1 mr-2 font-weight-bold text-dark font-size-lg\">\r\n          Cell Phone*\r\n        </div>\r\n        <Form>\r\n          <span className=\"font-weight-bold text-dark-75 py-1 font-size-lg\">\r\n            <TextField\r\n              className={ `font-weight-bold font-size-lg  rounded px-2 py-1 ${classes.input}` }\r\n              name=\"cell\"\r\n              required\r\n              value={ newUser.cell || '' }\r\n              type=\"tel\"\r\n              onChange={ handleCellChange }\r\n              onBlur={ handleOnBlur }\r\n              helperText={ newUserErrors.cell || '' }\r\n              error={ !!newUserErrors.cell }\r\n              InputProps={ {\r\n                inputComponent: CellNumberFormat,\r\n              } }\r\n            />\r\n          </span>\r\n        </Form>\r\n      </div>\r\n\r\n      <div style={{width: '400px'}} className=\"d-flex align-items-center bg-light-warning rounded p-5 mb-2\">\r\n        <span className=\"svg-icon svg-icon-dark mr-5 svg-icon-lg\">\r\n          <SVG\r\n            src='/media/a4g/Other2.svg'\r\n            title=\"Address 1\"></SVG>\r\n        </span>\r\n        <div className=\"d-flex flex-column flex-grow-1 mr-2 font-weight-bold text-dark text-hover-primary font-size-lg\">\r\n          Address Line 1\r\n        </div>\r\n        <Form>\r\n          <span className=\"font-weight-bold text-dark-75 py-1 font-size-lg\">\r\n            <TextField\r\n              className={ `font-weight-bold font-size-lg  rounded px-2 py-1 ${classes.input}` }\r\n              type=\"text\"\r\n              name=\"addr1\"\r\n              value={ newUser.addr1 || '' }\r\n              onChange={ handleOnChange }\r\n              onBlur={ handleOnBlur }\r\n              error={ !!newUserErrors.addr1 }\r\n              helperText={ newUserErrors.addr1 }\r\n            />\r\n          </span>\r\n        </Form>\r\n      </div>\r\n\r\n      <div style={{width: '400px'}} className=\"d-flex align-items-center mb-2 bg-light-warning rounded p-5\">\r\n        <span className=\"svg-icon svg-icon-dark mr-5 svg-icon-lg\">\r\n          <SVG\r\n            src='/media/a4g/Other2.svg'\r\n            title=\"Address 2\"></SVG>\r\n        </span>\r\n        <div className=\"d-flex flex-column flex-grow-1 mr-2 font-weight-bold text-dark font-size-lg\">\r\n          Address Line 2\r\n        </div>\r\n        <Form>\r\n          <span className=\"font-weight-bold text-dark py-1 font-size-lg\">\r\n            <TextField\r\n              className={ `font-weight-bold font-size-lg rounded px-2 py-1 ${classes.input}` }\r\n              type=\"text\"\r\n              name=\"addr2\"\r\n              value={ newUser.addr2 || '' }\r\n              onChange={ handleOnChange }\r\n              onBlur={ handleOnBlur }\r\n              error={ !!newUserErrors.addr2 }\r\n              helperText={ newUserErrors.addr2 }\r\n            />\r\n          </span>\r\n        </Form>\r\n      </div>\r\n\r\n      <div style={{width: '400px'}} className=\"d-flex align-items-center bg-light-warning rounded p-5 mb-2\">\r\n        <span className=\"svg-icon svg-icon-dark mr-5 svg-icon-lg\">\r\n          <SVG\r\n            src='/media/a4g/Flower3.svg'\r\n            title=\"City\"></SVG>\r\n        </span>\r\n        <div className=\"d-flex flex-column flex-grow-1 mr-2 font-weight-bold text-dark font-size-lg \">\r\n          City\r\n        </div>\r\n        <Form>\r\n          <span className=\"font-weight-bold text-dark-75 py-1 font-size-lg\">\r\n            <TextField\r\n              className={ `font-weight-bold font-size-lg rounded px-2 py-1 ${classes.input}` }\r\n              type=\"text\"\r\n              name=\"city\"\r\n              value={ newUser.city || '' }\r\n              onChange={ handleOnChange }\r\n              onBlur={ handleOnBlur }\r\n              error={ !!newUserErrors.city }\r\n              helperText={ newUserErrors.city }\r\n            />\r\n          </span>\r\n        </Form>\r\n      </div>\r\n\r\n      <div style={{width: '400px'}} className=\"d-flex align-items-center bg-light-warning rounded p-5 mb-2\">\r\n        <span className=\"svg-icon svg-icon-dark mr-5 svg-icon-lg\">\r\n          <SVG\r\n            src='/media/a4g/Flag.svg'\r\n            title=\"State\"></SVG>\r\n        </span>\r\n        <div className=\"d-flex flex-column flex-grow-1 mr-2 font-weight-bold text-dark font-size-lg mb-1\">\r\n          State\r\n        </div>\r\n        <Form>\r\n          <span className=\"font-weight-bold text-dark-75 py-1 font-size-lg\">\r\n            <TextField\r\n              className={ `font-weight-bold font-size-lg rounded px-2 py-1 ${classes.input}` }\r\n              type=\"text\"\r\n              name=\"st\"\r\n              value={ newUser.st || '' }\r\n              onChange={ handleOnChange }\r\n              onBlur={ handleOnBlur }\r\n              error={ !!newUserErrors.st }\r\n              helperText={ newUserErrors.st }\r\n            />\r\n          </span>\r\n        </Form>\r\n      </div>\r\n\r\n      <div style={{width: '400px'}} className=\"d-flex align-items-center bg-light-warning rounded p-5 mb-2\">\r\n        <span className=\"svg-icon svg-icon-dark mr-5 svg-icon-lg\">\r\n          <SVG\r\n            src='/media/a4g/Mailbox.svg'\r\n            title=\"Zip Code\"></SVG>\r\n        </span>\r\n        <div className=\"d-flex flex-column flex-grow-1 mr-2 font-weight-bold text-dark font-size-lg mb-1\">\r\n          Zip Code\r\n        </div>\r\n        <Form>\r\n          <span className=\"font-weight-bold text-dark-75 py-1 font-size-lg\">\r\n            <TextField\r\n              className={ `font-weight-bold font-size-lg rounded px-2 py-1 ${classes.input}` }\r\n              type=\"text\"\r\n              name=\"zip\"\r\n              value={ newUser.zip || '' }\r\n              onChange={ handleOnChange }\r\n              onBlur={ handleOnBlur }\r\n              error={ !!newUserErrors.zip }\r\n              helperText={ newUserErrors.zip }\r\n            />\r\n          </span>\r\n        </Form>\r\n      </div>\r\n\r\n      { form === 'RegisterStep' && newUser.custid === 0 ?\r\n        <>\r\n          <div style={{width: '400px'}} className=\"d-flex align-items-center bg-light-warning rounded p-5 mb-2\">\r\n            <span className=\"svg-icon svg-icon-dark mr-5 svg-icon-lg\">\r\n              <SVG\r\n                src='/media/a4g/Thumbtack.svg'\r\n                title=\"Password Required\"></SVG>\r\n            </span>\r\n            <div className=\"d-flex flex-column flex-grow-1 mr-2 font-weight-bold text-dark font-size-lg mb-1\">\r\n              Password*\r\n            </div>\r\n            <Form>\r\n              <span className=\"font-weight-bold text-dark-75 py-1 font-size-lg\">\r\n                <TextField\r\n                  className={ `font-weight-bold font-size-lg rounded px-2 py-1 ${classes.input}` }\r\n\r\n                  required\r\n                  type=\"password\"\r\n                  name=\"pwd\"\r\n                  value={ pwds.pwd || '' }\r\n                  onChange={ handleOnChange }\r\n                  onBlur={ handleOnBlur }\r\n                  error={ !!newUserErrors.pwd }\r\n                  helperText={ newUserErrors.pwd }\r\n                />\r\n              </span>\r\n            </Form>\r\n          </div>\r\n          <div style={{width: '400px'}} className=\"d-flex align-items-center bg-light-warning rounded p-5 mb-2\">\r\n            <span className=\"svg-icon svg-icon-dark mr-5 svg-icon-lg\">\r\n              <SVG\r\n                src='/media/a4g/Thumbtack.svg'\r\n                title=\"Password Required\"></SVG>\r\n            </span>\r\n            <div className=\"d-flex flex-column flex-grow-1 mr-2 font-weight-bold text-dark font-size-lg mb-1\">\r\n              Password*\r\n            </div>\r\n            <Form>\r\n              <span className=\"font-weight-bold text-dark-75 py-1 font-size-lg\">\r\n                <TextField\r\n                  className={ `font-weight-bold font-size-lg rounded px-2 py-1 ${classes.input}` }\r\n\r\n                  required\r\n                  name=\"pwd2\"\r\n                  type=\"password\"\r\n                  value={ pwds.pwd2 || '' }\r\n                  onChange={ handleOnChange }\r\n                  onBlur={ handleOnBlur }\r\n                  error={ !!newUserErrors.pwd2 }\r\n                  helperText={\r\n                    newUser.pwd2 === newUser.pwd ? newUserErrors.pwd2 : `The passwords do not match`\r\n                  }\r\n                />\r\n              </span>\r\n            </Form>\r\n          </div>\r\n        </>\r\n        :\r\n        <div>\r\n          <div className={ clsx(classes.row, classes.navButtons) }>\r\n            <button\r\n              type=\"button\"\r\n              onClick={ ChangePassword }\r\n              id=\"kt-profile\"\r\n              className={ `btn btn-info font-weight-bold px-9 py-4 my-3` }>\r\n              <span>Change Password</span>\r\n            </button>\r\n          </div>\r\n          <div className={ clsx(classes.row, classes.navButtons)} >\r\n            <button\r\n              type=\"button\"\r\n              onClick={ SaveChanges }\r\n              disabled={ !isValid }\r\n              id=\"kt-profile\"\r\n              className={ `btn btn-warning font-weight-bold px-9 py-4 my-3` }>\r\n              <span>&nbsp;&nbsp;&nbsp;&nbsp;Save Changes&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n"
    },
    {
      "file": "dashboard/src/app/pages/ProfileForm.js",
      "description": "Cell number is a special case. It is formatted with the helper `CellNumberFormat` which gets it by using `InputProps` to intercept the cell number and return it properly formatted.",
      "line": 287,
      "selection": {
        "start": {
          "line": 286,
          "character": 13
        },
        "end": {
          "line": 299,
          "character": 15
        }
      },
      "contents": "import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Form } from 'react-bootstrap';\r\nimport clsx from 'clsx';\r\nimport {\r\n  makeStyles,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport { useSnackbar } from 'notistack';\r\nimport Snackbar from 'app/helpers/Snackbar';\r\nimport { CellNumberFormat } from 'app/helpers/Formatters';\r\nimport SVG from 'react-inlinesvg';\r\nimport { initUserErrors } from 'app/helpers/Initializers';\r\nimport {\r\n  FormValidation,\r\n  fieldsValidation\r\n} from 'app/helpers/FormValidation';\r\nimport {\r\n  updateErrorState\r\n} from 'app/redux/errorsSlice';\r\nimport {\r\n  useDispatch,\r\n  useSelector\r\n} from 'react-redux';\r\nimport {\r\n  updateUserState,\r\n  selectCurrentUser,\r\n} from 'app/redux/userSlice';\r\nimport { useUpdateCustomerMutation } from 'app/redux/apiSlice';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  input: {\r\n    border: 'none',\r\n    background: '#f5f5f6',\r\n  },\r\n}));\r\n\r\nexport const ProfileForm = ({ form, handlePassword, isADuplicate }) => {\r\n  const [updateCustomer] = useUpdateCustomerMutation();\r\n  const userState = useSelector(selectCurrentUser);\r\n  const [isValid, setIsValid] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [pwds, setPwds] = useState({});\r\n  const classes = useStyles();\r\n\r\n  const [newUser, setNewUser] = useState(userState);\r\n  const [newUserErrors, setNewUserErrors] = useState(initUserErrors);\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const handleOnChange = e => {\r\n    let field = e.target.name;\r\n    let value = e.target.value;\r\n    let item = '';\r\n    item += value;\r\n\r\n    if (field === 'pwd' || field === 'pwd2' || field === 'newpwd' || field === 'newpwd2')\r\n    {\r\n      setPwds({\r\n        ...pwds,\r\n        [field]: item\r\n      })\r\n    } else\r\n    {\r\n      setNewUser({\r\n        ...newUser,\r\n        [field]: item\r\n      })\r\n    }\r\n  };\r\n\r\n  //Cell number to be formatted\r\n  const handleCellChange = e => {\r\n    let field = e.target.name;\r\n    let value = e.target.value;\r\n    setNewUser({\r\n      ...newUser,\r\n      [field]: value\r\n    })\r\n  };\r\n\r\n  const handleOnBlur = e => {\r\n    let field = e.target.name;\r\n    let value = e.target.value;\r\n    let required = e.target.required;\r\n\r\n    if (field === 'cell')\r\n    {\r\n      value = newUser.cell;\r\n    }\r\n\r\n    if (value === '' && !required)\r\n    {\r\n      return;\r\n    };\r\n    //fix capitalization\r\n    let val = '';\r\n    if (field === 'firstname' ||\r\n      field === 'lastname' ||\r\n      field === 'city' ||\r\n      field === 'st')\r\n    {\r\n      if (value)\r\n      {\r\n        if (field === 'st')\r\n        {\r\n          val = value.toUpperCase();\r\n        } else\r\n        {\r\n          val = value.toLowerCase();\r\n          let nameArray = val.split(' ');\r\n          val = '';\r\n          nameArray.forEach(function (element) {\r\n            val += element[0].toUpperCase() + element.slice(1) + ' ';\r\n          });\r\n          val = val.trimEnd();\r\n        }\r\n        setNewUser({\r\n          ...newUser,\r\n          [field]: val\r\n        })\r\n      }\r\n    }\r\n\r\n    if (typeof fieldsValidation[field] !== 'undefined')\r\n    {\r\n      let error =\r\n        FormValidation(field, value, fieldsValidation, required, isADuplicate) || '';\r\n      setNewUserErrors({\r\n        ...newUserErrors,\r\n        [field]: error\r\n      })\r\n      dispatch(updateErrorState(newUserErrors));\r\n      if (field === 'pwd2' && newUserErrors.pwd2 === '')\r\n      {\r\n        handlePassword(value);\r\n      }\r\n      if (error !== '')\r\n      {\r\n        setIsValid(false);\r\n      } else\r\n      {\r\n        setIsValid(true);\r\n      }\r\n    }\r\n    dispatch(updateUserState(newUser));\r\n    dispatch(updateErrorState(newUserErrors));\r\n  };\r\n\r\n  const ChangePassword = () => {\r\n    enqueueSnackbar('You must login to change your password.', {\r\n      variant: 'warning',\r\n    });\r\n    history.push({\r\n      pathname: '/password',\r\n    });\r\n  };\r\n\r\n  const goToDashboard = () => {\r\n    history.push({\r\n      pathname: '/dashboard',\r\n    });\r\n  };\r\n\r\n  const SaveChanges = () => {\r\n    if(newUser.email === '' || newUser.cell === '' || newUser.firstname === '' || newUser.lastname === '') {\r\n      let snackType='missingRequiredField'\r\n      enqueueSnackbar(null, {\r\n        persist: false,\r\n        content: key => <Snackbar id={ key } message={ snackType } />\r\n      });\r\n    }\r\n    updateCustomer(newUser).unwrap()\r\n      .then((payload) => {\r\n        //console.log(`updateCustomer fulfilled payload: `, payload)\r\n        dispatch(updateUserState(payload));\r\n        goToDashboard();\r\n      })\r\n      .catch((error) => {\r\n        console.error('updateCustomer rejected error: ', error);\r\n        dispatch(updateErrorState({ cell: 'Duplicate cell' }));\r\n        dispatch(updateErrorState({ email: 'Duplicate email' }));\r\n\r\n        let snackType='signUpError'\r\n        enqueueSnackbar(null, {\r\n          persist: false,\r\n          content: key => <Snackbar id={ key } message={ snackType } />\r\n        });\r\n      });\r\n  }\r\n\r\n  return (\r\n    \r\n    <div className=\"d-flex flex-column align-items-center card-body pt-0\" >\r\n      <div style={{width: '400px'}} className=\"d-flex align-items-center mb-2 bg-light-warning rounded p-5\">\r\n        <span className=\"svg-icon svg-icon-dark mr-5 svg-icon-lg\">\r\n          <SVG\r\n            src='/media/a4g/Font.svg'\r\n            title=\"First Name Required\"></SVG>\r\n        </span>\r\n        <div className=\"d-flex flex-column flex-grow-1 mr-2 font-weight-bold text-dark font-size-lg\">\r\n          First Name*\r\n        </div>\r\n        <Form>\r\n          <span className=\"font-weight-bold py-1 font-size-lg\">\r\n            <TextField\r\n              className={ `font-weight-bold font-size-lg  rounded text-dark px-2 py-1 ${classes.input}` }\r\n              type=\"text\"\r\n              name=\"firstname\"\r\n              required\r\n              value={ newUser.firstname || '' }\r\n              onChange={ handleOnChange }\r\n              onBlur={ handleOnBlur }\r\n              error={ !!newUserErrors.firstname }\r\n              helperText={ newUserErrors.firstname }\r\n            />\r\n          </span>\r\n        </Form>\r\n      </div>\r\n\r\n      <div style={{width: '400px'}} className=\"d-flex align-items-center bg-light-warning rounded p-5 mb-2\">\r\n        <span className=\"svg-icon svg-icon-dark mr-5 svg-icon-lg\">\r\n          <SVG\r\n            src='/media/a4g/Font.svg'\r\n            title=\"Last Name Required\"></SVG>\r\n        </span>\r\n        <div className=\"d-flex flex-column flex-grow-1 mr-2 font-weight-bold text-dark font-size-lg\">\r\n          Last Name*\r\n        </div>\r\n        <Form>\r\n          <span className=\"font-weight-bold text-dark-75 py-1 font-size-lg\">\r\n            <TextField\r\n              className={ `font-weight-bold font-size-lg rounded px-2 py-1 ${classes.input}` }\r\n              type=\"text\"\r\n              name=\"lastname\"\r\n              required\r\n              value={ newUser.lastname || '' }\r\n              onChange={ handleOnChange }\r\n              onBlur={ handleOnBlur }\r\n              error={ !!newUserErrors.lastname }\r\n              helperText={ newUserErrors.lastname }\r\n            />\r\n          </span>\r\n        </Form>\r\n      </div>\r\n\r\n      <div style={{width: '400px'}} className=\"d-flex align-items-center bg-light-warning rounded p-5 mb-2\">\r\n        <span className=\"svg-icon svg-icon-dark mr-5 svg-icon-lg\">\r\n          <SVG\r\n            src='/media/a4g/Urgent-mail.svg'\r\n            title=\"Email Required\"></SVG>\r\n        </span>\r\n        <div className=\"d-flex flex-column flex-grow-1 mr-2 font-weight-bold text-dark font-size-lg\">\r\n          Email Address*\r\n        </div>\r\n        <Form>\r\n          <span className=\"font-weight-bold text-dark-75 py-1 font-size-lg\">\r\n            <TextField\r\n              className={ `font-weight-bold font-size-lg  rounded px-2 py-1 ${classes.input}` }\r\n              type=\"text\"\r\n              name=\"email\"\r\n              required\r\n              value={ newUser.email || '' }\r\n              onChange={ handleOnChange }\r\n              onBlur={ handleOnBlur }\r\n              error={ !!newUserErrors.email }\r\n              helperText={ newUserErrors.email }\r\n            />\r\n          </span>\r\n        </Form>\r\n      </div>\r\n\r\n      <div style={{width: '400px'}} className=\"d-flex align-items-center bg-light-warning rounded p-5 mb-2\">\r\n        <span className=\"svg-icon svg-icon-dark mr-5 svg-icon-lg\">\r\n          <SVG\r\n            src='/media/a4g/iPhone-X.svg'\r\n            title=\"Cell Phone Required\"></SVG>\r\n        </span>\r\n        <div className=\"d-flex flex-column flex-grow-1 mr-2 font-weight-bold text-dark font-size-lg\">\r\n          Cell Phone*\r\n        </div>\r\n        <Form>\r\n          <span className=\"font-weight-bold text-dark-75 py-1 font-size-lg\">\r\n            <TextField\r\n              className={ `font-weight-bold font-size-lg  rounded px-2 py-1 ${classes.input}` }\r\n              name=\"cell\"\r\n              required\r\n              value={ newUser.cell || '' }\r\n              type=\"tel\"\r\n              onChange={ handleCellChange }\r\n              onBlur={ handleOnBlur }\r\n              helperText={ newUserErrors.cell || '' }\r\n              error={ !!newUserErrors.cell }\r\n              InputProps={ {\r\n                inputComponent: CellNumberFormat,\r\n              } }\r\n            />\r\n          </span>\r\n        </Form>\r\n      </div>\r\n\r\n      <div style={{width: '400px'}} className=\"d-flex align-items-center bg-light-warning rounded p-5 mb-2\">\r\n        <span className=\"svg-icon svg-icon-dark mr-5 svg-icon-lg\">\r\n          <SVG\r\n            src='/media/a4g/Other2.svg'\r\n            title=\"Address 1\"></SVG>\r\n        </span>\r\n        <div className=\"d-flex flex-column flex-grow-1 mr-2 font-weight-bold text-dark text-hover-primary font-size-lg\">\r\n          Address Line 1\r\n        </div>\r\n        <Form>\r\n          <span className=\"font-weight-bold text-dark-75 py-1 font-size-lg\">\r\n            <TextField\r\n              className={ `font-weight-bold font-size-lg  rounded px-2 py-1 ${classes.input}` }\r\n              type=\"text\"\r\n              name=\"addr1\"\r\n              value={ newUser.addr1 || '' }\r\n              onChange={ handleOnChange }\r\n              onBlur={ handleOnBlur }\r\n              error={ !!newUserErrors.addr1 }\r\n              helperText={ newUserErrors.addr1 }\r\n            />\r\n          </span>\r\n        </Form>\r\n      </div>\r\n\r\n      <div style={{width: '400px'}} className=\"d-flex align-items-center mb-2 bg-light-warning rounded p-5\">\r\n        <span className=\"svg-icon svg-icon-dark mr-5 svg-icon-lg\">\r\n          <SVG\r\n            src='/media/a4g/Other2.svg'\r\n            title=\"Address 2\"></SVG>\r\n        </span>\r\n        <div className=\"d-flex flex-column flex-grow-1 mr-2 font-weight-bold text-dark font-size-lg\">\r\n          Address Line 2\r\n        </div>\r\n        <Form>\r\n          <span className=\"font-weight-bold text-dark py-1 font-size-lg\">\r\n            <TextField\r\n              className={ `font-weight-bold font-size-lg rounded px-2 py-1 ${classes.input}` }\r\n              type=\"text\"\r\n              name=\"addr2\"\r\n              value={ newUser.addr2 || '' }\r\n              onChange={ handleOnChange }\r\n              onBlur={ handleOnBlur }\r\n              error={ !!newUserErrors.addr2 }\r\n              helperText={ newUserErrors.addr2 }\r\n            />\r\n          </span>\r\n        </Form>\r\n      </div>\r\n\r\n      <div style={{width: '400px'}} className=\"d-flex align-items-center bg-light-warning rounded p-5 mb-2\">\r\n        <span className=\"svg-icon svg-icon-dark mr-5 svg-icon-lg\">\r\n          <SVG\r\n            src='/media/a4g/Flower3.svg'\r\n            title=\"City\"></SVG>\r\n        </span>\r\n        <div className=\"d-flex flex-column flex-grow-1 mr-2 font-weight-bold text-dark font-size-lg \">\r\n          City\r\n        </div>\r\n        <Form>\r\n          <span className=\"font-weight-bold text-dark-75 py-1 font-size-lg\">\r\n            <TextField\r\n              className={ `font-weight-bold font-size-lg rounded px-2 py-1 ${classes.input}` }\r\n              type=\"text\"\r\n              name=\"city\"\r\n              value={ newUser.city || '' }\r\n              onChange={ handleOnChange }\r\n              onBlur={ handleOnBlur }\r\n              error={ !!newUserErrors.city }\r\n              helperText={ newUserErrors.city }\r\n            />\r\n          </span>\r\n        </Form>\r\n      </div>\r\n\r\n      <div style={{width: '400px'}} className=\"d-flex align-items-center bg-light-warning rounded p-5 mb-2\">\r\n        <span className=\"svg-icon svg-icon-dark mr-5 svg-icon-lg\">\r\n          <SVG\r\n            src='/media/a4g/Flag.svg'\r\n            title=\"State\"></SVG>\r\n        </span>\r\n        <div className=\"d-flex flex-column flex-grow-1 mr-2 font-weight-bold text-dark font-size-lg mb-1\">\r\n          State\r\n        </div>\r\n        <Form>\r\n          <span className=\"font-weight-bold text-dark-75 py-1 font-size-lg\">\r\n            <TextField\r\n              className={ `font-weight-bold font-size-lg rounded px-2 py-1 ${classes.input}` }\r\n              type=\"text\"\r\n              name=\"st\"\r\n              value={ newUser.st || '' }\r\n              onChange={ handleOnChange }\r\n              onBlur={ handleOnBlur }\r\n              error={ !!newUserErrors.st }\r\n              helperText={ newUserErrors.st }\r\n            />\r\n          </span>\r\n        </Form>\r\n      </div>\r\n\r\n      <div style={{width: '400px'}} className=\"d-flex align-items-center bg-light-warning rounded p-5 mb-2\">\r\n        <span className=\"svg-icon svg-icon-dark mr-5 svg-icon-lg\">\r\n          <SVG\r\n            src='/media/a4g/Mailbox.svg'\r\n            title=\"Zip Code\"></SVG>\r\n        </span>\r\n        <div className=\"d-flex flex-column flex-grow-1 mr-2 font-weight-bold text-dark font-size-lg mb-1\">\r\n          Zip Code\r\n        </div>\r\n        <Form>\r\n          <span className=\"font-weight-bold text-dark-75 py-1 font-size-lg\">\r\n            <TextField\r\n              className={ `font-weight-bold font-size-lg rounded px-2 py-1 ${classes.input}` }\r\n              type=\"text\"\r\n              name=\"zip\"\r\n              value={ newUser.zip || '' }\r\n              onChange={ handleOnChange }\r\n              onBlur={ handleOnBlur }\r\n              error={ !!newUserErrors.zip }\r\n              helperText={ newUserErrors.zip }\r\n            />\r\n          </span>\r\n        </Form>\r\n      </div>\r\n\r\n      { form === 'RegisterStep' && newUser.custid === 0 ?\r\n        <>\r\n          <div style={{width: '400px'}} className=\"d-flex align-items-center bg-light-warning rounded p-5 mb-2\">\r\n            <span className=\"svg-icon svg-icon-dark mr-5 svg-icon-lg\">\r\n              <SVG\r\n                src='/media/a4g/Thumbtack.svg'\r\n                title=\"Password Required\"></SVG>\r\n            </span>\r\n            <div className=\"d-flex flex-column flex-grow-1 mr-2 font-weight-bold text-dark font-size-lg mb-1\">\r\n              Password*\r\n            </div>\r\n            <Form>\r\n              <span className=\"font-weight-bold text-dark-75 py-1 font-size-lg\">\r\n                <TextField\r\n                  className={ `font-weight-bold font-size-lg rounded px-2 py-1 ${classes.input}` }\r\n\r\n                  required\r\n                  type=\"password\"\r\n                  name=\"pwd\"\r\n                  value={ pwds.pwd || '' }\r\n                  onChange={ handleOnChange }\r\n                  onBlur={ handleOnBlur }\r\n                  error={ !!newUserErrors.pwd }\r\n                  helperText={ newUserErrors.pwd }\r\n                />\r\n              </span>\r\n            </Form>\r\n          </div>\r\n          <div style={{width: '400px'}} className=\"d-flex align-items-center bg-light-warning rounded p-5 mb-2\">\r\n            <span className=\"svg-icon svg-icon-dark mr-5 svg-icon-lg\">\r\n              <SVG\r\n                src='/media/a4g/Thumbtack.svg'\r\n                title=\"Password Required\"></SVG>\r\n            </span>\r\n            <div className=\"d-flex flex-column flex-grow-1 mr-2 font-weight-bold text-dark font-size-lg mb-1\">\r\n              Password*\r\n            </div>\r\n            <Form>\r\n              <span className=\"font-weight-bold text-dark-75 py-1 font-size-lg\">\r\n                <TextField\r\n                  className={ `font-weight-bold font-size-lg rounded px-2 py-1 ${classes.input}` }\r\n\r\n                  required\r\n                  name=\"pwd2\"\r\n                  type=\"password\"\r\n                  value={ pwds.pwd2 || '' }\r\n                  onChange={ handleOnChange }\r\n                  onBlur={ handleOnBlur }\r\n                  error={ !!newUserErrors.pwd2 }\r\n                  helperText={\r\n                    newUser.pwd2 === newUser.pwd ? newUserErrors.pwd2 : `The passwords do not match`\r\n                  }\r\n                />\r\n              </span>\r\n            </Form>\r\n          </div>\r\n        </>\r\n        :\r\n        <div>\r\n          <div className={ clsx(classes.row, classes.navButtons) }>\r\n            <button\r\n              type=\"button\"\r\n              onClick={ ChangePassword }\r\n              id=\"kt-profile\"\r\n              className={ `btn btn-info font-weight-bold px-9 py-4 my-3` }>\r\n              <span>Change Password</span>\r\n            </button>\r\n          </div>\r\n          <div className={ clsx(classes.row, classes.navButtons)} >\r\n            <button\r\n              type=\"button\"\r\n              onClick={ SaveChanges }\r\n              disabled={ !isValid }\r\n              id=\"kt-profile\"\r\n              className={ `btn btn-warning font-weight-bold px-9 py-4 my-3` }>\r\n              <span>&nbsp;&nbsp;&nbsp;&nbsp;Save Changes&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n"
    }
  ],
  "isPrimary": true
}